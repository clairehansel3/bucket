cmake_minimum_required(VERSION 3.13.1 FATAL_ERROR)
project(bucket VERSION 0.0.0 LANGUAGES C CXX)

find_package(LLVM 11.0.0 REQUIRED)
find_package(Boost 1.66 REQUIRED)

llvm_map_components_to_libnames(bucket_LLVM_LIBRARIES core bitwriter)

add_library(bucketrt code/runtime.c)
target_include_directories(bucketrt PRIVATE code)

add_library(bucket code/source_file.cxx code/token.cxx code/lexer.cxx code/abstract_syntax_tree.cxx code/parser.cxx code/symbol_table.cxx code/code_generator.cxx code/miscellaneous.cxx)
target_compile_definitions(bucket PRIVATE ${LLVM_DEFINITIONS})
target_compile_options(bucket PRIVATE -g -fsanitize=undefined,address)
target_link_options(bucket PRIVATE -g -fsanitize=undefined,address)
set_target_properties(bucket PROPERTIES CXX_EXTENSIONS OFF CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON)
target_include_directories(bucket PRIVATE code)
target_include_directories(bucket SYSTEM PRIVATE ${LLVM_INCLUDE_DIRS} ${Boost_INCLUDE_DIRS})
include_directories(${Boost_INCLUDE_DIR})
target_link_libraries(bucket PRIVATE ${Boost_LIBRARIES} ${bucket_LLVM_LIBRARIES})

add_executable(highlight_letter_e tests/highlight_letter_e.cxx)
target_compile_options(highlight_letter_e PRIVATE -g -fsanitize=undefined,address)
target_link_options(highlight_letter_e PRIVATE -g -fsanitize=undefined,address)
set_target_properties(highlight_letter_e PROPERTIES CXX_EXTENSIONS OFF CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON)
target_include_directories(highlight_letter_e PRIVATE code)
target_link_libraries(highlight_letter_e bucket)

add_executable(highlight_first_letter_e tests/highlight_first_letter_e.cxx)
target_compile_options(highlight_first_letter_e PRIVATE -g -fsanitize=undefined,address)
target_link_options(highlight_first_letter_e PRIVATE -g -fsanitize=undefined,address)
set_target_properties(highlight_first_letter_e PROPERTIES CXX_EXTENSIONS OFF CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON)
target_include_directories(highlight_first_letter_e PRIVATE code)
target_link_libraries(highlight_first_letter_e bucket)

add_executable(highlight_between_first_two_es tests/highlight_between_first_two_es.cxx)
target_compile_options(highlight_between_first_two_es PRIVATE -g -fsanitize=undefined,address)
target_link_options(highlight_between_first_two_es PRIVATE -g -fsanitize=undefined,address)
set_target_properties(highlight_between_first_two_es PROPERTIES CXX_EXTENSIONS OFF CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON)
target_include_directories(highlight_between_first_two_es PRIVATE code)
target_link_libraries(highlight_between_first_two_es bucket)

add_executable(lex tests/lex.cxx)
target_compile_options(lex PRIVATE -g -fsanitize=undefined,address)
target_link_options(lex PRIVATE -g -fsanitize=undefined,address)
set_target_properties(lex PROPERTIES CXX_EXTENSIONS OFF CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON)
target_include_directories(lex PRIVATE code)
target_link_libraries(lex bucket)

add_executable(parse tests/parse.cxx)
target_compile_options(parse PRIVATE -g -fsanitize=undefined,address)
target_link_options(parse PRIVATE -g -fsanitize=undefined,address)
set_target_properties(parse PROPERTIES CXX_EXTENSIONS OFF CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON)
target_include_directories(parse PRIVATE code)
target_link_libraries(parse bucket)

add_executable(print_symbol_table_pass_0 tests/print_symbol_table_pass_0.cxx)
target_compile_options(print_symbol_table_pass_0 PRIVATE -g -fsanitize=undefined,address)
target_link_options(print_symbol_table_pass_0 PRIVATE -g -fsanitize=undefined,address)
set_target_properties(print_symbol_table_pass_0 PROPERTIES CXX_EXTENSIONS OFF CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON)
target_include_directories(print_symbol_table_pass_0 PRIVATE code ${LLVM_INCLUDE_DIRS})
target_link_libraries(print_symbol_table_pass_0 bucket ${bucket_LLVM_LIBRARIES})

add_executable(print_symbol_table_pass_1 tests/print_symbol_table_pass_1.cxx)
target_compile_options(print_symbol_table_pass_1 PRIVATE -g -fsanitize=undefined,address)
target_link_options(print_symbol_table_pass_1 PRIVATE -g -fsanitize=undefined,address)
set_target_properties(print_symbol_table_pass_1 PROPERTIES CXX_EXTENSIONS OFF CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON)
target_include_directories(print_symbol_table_pass_1 PRIVATE code ${LLVM_INCLUDE_DIRS})
target_link_libraries(print_symbol_table_pass_1 bucket ${bucket_LLVM_LIBRARIES})

add_executable(print_symbol_table_pass_2 tests/print_symbol_table_pass_2.cxx)
target_compile_options(print_symbol_table_pass_2 PRIVATE -g -fsanitize=undefined,address)
target_link_options(print_symbol_table_pass_2 PRIVATE -g -fsanitize=undefined,address)
set_target_properties(print_symbol_table_pass_2 PROPERTIES CXX_EXTENSIONS OFF CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON)
target_include_directories(print_symbol_table_pass_2 PRIVATE code ${LLVM_INCLUDE_DIRS})
target_link_libraries(print_symbol_table_pass_2 bucket ${bucket_LLVM_LIBRARIES})

add_executable(print_symbol_table_pass_3 tests/print_symbol_table_pass_3.cxx)
target_compile_options(print_symbol_table_pass_3 PRIVATE -g -fsanitize=undefined,address)
target_link_options(print_symbol_table_pass_3 PRIVATE -g -fsanitize=undefined,address)
set_target_properties(print_symbol_table_pass_3 PROPERTIES CXX_EXTENSIONS OFF CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON)
target_include_directories(print_symbol_table_pass_3 PRIVATE code ${LLVM_INCLUDE_DIRS})
target_link_libraries(print_symbol_table_pass_3 bucket ${bucket_LLVM_LIBRARIES})

add_executable(print_symbol_table_pass_4 tests/print_symbol_table_pass_4.cxx)
target_compile_options(print_symbol_table_pass_4 PRIVATE -g -fsanitize=undefined,address)
target_link_options(print_symbol_table_pass_4 PRIVATE -g -fsanitize=undefined,address)
set_target_properties(print_symbol_table_pass_4 PROPERTIES CXX_EXTENSIONS OFF CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON)
target_include_directories(print_symbol_table_pass_4 PRIVATE code ${LLVM_INCLUDE_DIRS})
target_link_libraries(print_symbol_table_pass_4 bucket ${bucket_LLVM_LIBRARIES})

add_executable(compile tests/compile.cxx)
target_compile_options(compile PRIVATE -g -fsanitize=undefined,address)
target_link_options(compile PRIVATE -g -fsanitize=undefined,address)
set_target_properties(compile PROPERTIES CXX_EXTENSIONS OFF CXX_STANDARD 17 CXX_STANDARD_REQUIRED ON)
target_include_directories(compile PRIVATE code ${LLVM_INCLUDE_DIRS})
target_link_libraries(compile bucket ${bucket_LLVM_LIBRARIES})

if (CMAKE_BUILD_TYPE MATCHES Debug)
  add_definitions(-DBUCKET_DEBUG -DBUCKET_USE_ALLOCA -DBUCKET_EXCEPTION_STACKTRACE)
  add_definitions(-DLLVM_ENABLE_DUMP)
endif()
